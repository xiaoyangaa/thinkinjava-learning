关于并发：

1.如果一个类中的某个属性会被多个线程共享访问，那么最好的方式就是把这个属性设置为private，并且用syncronized来封装它的get和set方法；
2.对于i++操作，其实是一个先读，后写的操作，所以这个操作本身不是原子性的，即便是设置为volatile，如果有两个线程并发的执行i++，一样会带来线程安全问题，

举例i最早是0的时候，考虑以下时序：
线程A  get i=0; 
线程B get i=0;
线程A i=i+1;
线程B i=i+1;
最终这个i还是1；



线程关闭：

似乎对于io和syncronized这两种类型的情况，interrupt是无法将其打断的，但是对于nio类型，interrupt是可以将其打断的；
